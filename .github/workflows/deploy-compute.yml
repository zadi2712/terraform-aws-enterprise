name: Deploy Compute Layer

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment'
        required: true
        type: choice
        options: [dev, qa, uat, prod]
        default: 'dev'
      action:
        description: 'Terraform Action'
        required: true
        type: choice
        options: [plan, apply, destroy]
        default: 'plan'
      terraform_version:
        description: 'Terraform Version'
        required: false
        type: string
        default: '1.9.0'
  push:
    branches: [main, develop]
    paths:
      - 'layers/compute/**'
      - 'modules/eks/**'
      - 'modules/ec2/**'
      - 'modules/asg/**'
      - '.github/workflows/deploy-compute.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'layers/compute/**'
      - 'modules/eks/**'
      - 'modules/ec2/**'
      - 'modules/asg/**'

concurrency:
  group: compute-${{ github.event.inputs.environment || 'dev' }}
  cancel-in-progress: false

permissions:
  contents: read
  pull-requests: write

jobs:
  plan-on-pr:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/reusable-terraform.yml
    with:
      layer: compute
      environment: dev
      action: plan
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
  
  deploy-on-push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/reusable-terraform.yml
    with:
      layer: compute
      environment: dev
      action: apply
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
  
  manual-deployment:
    if: github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/reusable-terraform.yml
    with:
      layer: compute
      environment: ${{ github.event.inputs.environment }}
      action: ${{ github.event.inputs.action }}
      terraform_version: ${{ github.event.inputs.terraform_version || '1.9.0' }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
